---
title: "Sunfish multinomial state-space"
date: today
format:
  html:
    code-fold: false
    toc: true
    link-external-newwindow: true
    embed-resources: true
theme:
  light: flatly
  dark: darkly
---

# Sunfish multinomital state-space results

Hi all! Here are the final results from the multinomial state-space model estimating driver-species relationships and species-species relationships. The model has been run:

1. with no interactions among species (only driver-species relationships)
2. with all possible pairwise interactions (i.e., bidirectional interactions (e.g., Tsuga <-> Betula rather than Tsuga -> Betula))
    + The 5 models representing key interactions of interest (discussed in meetings) have been bootstrapped 1000 times and plot below

Below are plots of the $B$ coefficients: the driver-species relationships, and the $C$ coefficients: the species-species relationships. Plots of the pollen and covariates are at the end of the document for reference.

Each model tests a hypothesis, or component of a hypothesis (e.g., are driver-species relationships or species-species interactions more important; which drivers are most important; which interactions are most important...). For the paper, not all the models need to be included. I'd suggest that model selection is hepothesis driven, we can rank the models based on their ecological meaning/relevance. Models not included in the main MS can be in the supplementary as alternative hypotheses.



# Packages and libraries {.unlisted .hidden}

```{r Libraries}
#| include: false
if (!require("pacman")) install.packages("pacman", repos="http://cran.r-project.org")
pacman::p_load(tidyverse, patchwork, ggtext)    # Install & load packages

res <- readRDS("./results/sunfish_mnts_bootstraps_1000.rds")

```

## Wrangling B coefficients {.unlisted .hidden}

```{r BWrangling}
#| warning: false

res <- readRDS("./results/sunfish_mnts_bootstraps_1000.rds")
X_names_list <- c(
  mean_ll ="Lake level (DBML (cm))",
  beech_d13 = "Beech &delta;<sup>13</sup>C",
  hem_d13 = "Hemlock &delta;<sup>13</sup>C",
  mean_ns_temp ="Temperature"
)

facet_fac <- c("No interaction " = "no_int", "Tsuga:Fagus" = "tf_int",
               "Tsuga:Betula" = "tb_int", "Fagus:Quercus" = "fq_int",
               "Tsuga:Quercus" = "tq_int", "Tsuga:Pinus" = "tp_int")

mods_boot <- map(res, ~ {
  as_tibble(.x[[2]]) |> 
  pivot_longer(-c(logLik, opt.convergence))
}) |> 
  bind_rows(.id = "hyp") |> 
  mutate(hyp = str_remove(hyp, pattern = '[[:digit:]]+'))

mods_boot_68 <- mods_boot |> 
#  filter(opt.convergence == 0) |> 
  group_by(hyp, name) |> 
  summarise(boot_mean = mean(value),
            boot_sd = sd(value),
            upper_68 = quantile(value, probs = 0.84),
            lower_68 = quantile(value, probs = 0.16)) |> 
  mutate(t_scores = boot_mean / boot_sd,
         p_vals = 2 * pnorm(q = abs(t_scores), lower.tail = F),
         sig = p_vals < 0.05)
#

mods_boot_table <- mods_boot_68 |> 
  mutate(name = str_replace_all(name, 
    pattern = "y1|y2|y3|y4|y5|y6", 
    replacement = function(x) case_when(
      x == "y1" ~ "Other",
      x == "y2" ~ "P.strobu",
      x == "y3" ~ "Tsuga",
      x == "y4" ~ "Fagus",
      x == "y5" ~ "Quercus",
      x == "y6" ~ "Betula",
      TRUE ~ x  # Keep other values unchanged
    ))) |> 
    filter(!str_detect(name, "v."))

mods_boot_68_B <- mods_boot_68 |> 
  filter(grepl(paste(names(X_names_list), collapse = "|"), name)) |> 
  separate_wider_delim(cols = name, delim = ".", names = c("cov", "name")) |>
  mutate(name = str_replace_all(name, 
    pattern = "y2|y3|y4|y5|y6", 
    replacement = function(x) case_when(
      x == "y2" ~ "P.strobu",
      x == "y3" ~ "Tsuga",
      x == "y4" ~ "Fagus",
      x == "y5" ~ "Quercus",
      x == "y6" ~ "Betula",
      TRUE ~ x  # Keep other values unchanged
    )),
    hyp = fct(hyp, levels = facet_fac))

mod_plots_B <- mods_boot_68_B |> 
    (\(x) split(x, x$hyp))() |>
      map(\(df) df |>
        ggplot(aes(x = name, y = boot_mean, colour = as_factor(sig))) +
          geom_point() +
          geom_hline(yintercept = 0, linetype = "dashed", alpha = 0.2) +
          geom_errorbar(aes(ymin = lower_68, ymax = upper_68),
                            width = .2, alpha = 0.5) +
          scale_color_manual(name = "Significance", labels = c("> 0.05", "< 0.05"),
                             values = c("#202020", "#d80000")) +
          labs(x = "Taxa", y = "Coefficient") +
          facet_wrap(~ cov, labeller = as_labeller(X_names_list)) +
          theme_bw() +
          theme(
            strip.text = element_markdown(size = 12),
            strip.background = element_rect(fill = NA),
            legend.position = "bottom",
            axis.text = element_text(size = 10, angle = 90),
            axis.title = element_text(size = 10),
            legend.text = element_text(size = 8) 
  )
)
```

## Wrangling Ccoefficients {.unlisted .hidden}

```{r CWrangling}
#| warning: false

target_spp <- c("P.strobu", "Tsuga", "Fagus", "Quercus", "Betula")
names_factor <- c(map2_vec(c("Other", target_spp), c("Other", target_spp), \(x, y) paste(x, y, sep = ".")), 
c("Fagus.Quercus", "Quercus.Fagus", "Betula.Tsuga",
  "Tsuga.Betula", "Tsuga.Fagus", "Fagus.Tsuga", 
  "P.strobu.Tsuga", "Tsuga.P.strobu", "Tsuga.Quercus", "Quercus.Tsuga"))


mods_boot_68_C <- mods_boot_68 |> 
  filter(!grepl(paste(c(names(X_names_list), "v."), collapse = "|"), name),
         !name %in% c("y2", "y3", "y4", "y5", "y6")) |>
  mutate(name = str_remove(name, "sp.")) |> 
  # separate_wider_delim(cols = name, delim = ".", names = c("cov", "name")) |>
  mutate(name = str_replace_all(name, 
    pattern = "y1|y2|y3|y4|y5|y6", 
    replacement = function(x) case_when(
      x == "y1" ~ "Other",
      x == "y2" ~ "P.strobu",
      x == "y3" ~ "Tsuga",
      x == "y4" ~ "Fagus",
      x == "y5" ~ "Quercus",
      x == "y6" ~ "Betula",
      TRUE ~ x  # Keep other values unchanged
    )),
  name = fct(name, levels = names_factor),
  hyp = fct(hyp, levels = facet_fac))


mod_plots_C <- mods_boot_68_C |> 
    (\(x) split(x, x$hyp))() |>
      map(\(df) df |>
        ggplot(aes(x = name, y = boot_mean, colour = as_factor(sig))) +
          geom_point() +
          geom_hline(yintercept = 0, linetype = "dashed", alpha = 0.2) +
          geom_errorbar(aes(ymin = lower_68, ymax = upper_68),
                            width = .2, alpha = 0.5) +
          scale_color_manual(name = "Significance", labels = c("> 0.05", "< 0.05"),
                             values = c("#202020", "#d80000")) +
          # labs(x = "Taxa", y = "Coefficient", title = paste(unique(df$hyp))) +
          labs(x = "Taxa", y = "Coefficient") +
          # facet_wrap(~ cov, labeller = as_labeller(X_names_list)) +
          theme_bw() +
          theme(
            strip.text = element_markdown(size = 8),
            strip.background = element_rect(fill = NA),
            legend.position = "bottom",
            axis.text = element_text(size = 8, angle = 90),
            axis.title = element_text(size = 10),
            legend.text = element_text(size = 8) 
  )
)
```

## Wrangling pollen {.unlisted .hidden}

```{r pollenWrangling}
#| warning: false

sunfish_pollen <- read_csv("./data/Sunfish_585_pollen_counts_bchron062722B_cleaned.csv")
sunfish_combined <- read_csv("./data/Sunfish_dataset.csv")

# Remove spp with less than 5 count in whole core
sunfish_pollen_only <- sunfish_pollen[-c(1:8)]
filter_5_names <- names(which(colSums(sunfish_pollen_only) <= 20))

# Remove some aquatic/semi-aquatic spp as suggested
aquatic_spp <- c(
  "Brasenia", "Nuphar",
  "Nym", "Nym.cell", 
  "Potamoge","Myrica", 
  "C.stolon", "Botrich",
  "Botrioc")

spp_remove <- c(aquatic_spp, setdiff(filter_5_names, aquatic_spp))

# clip age
sunfish_pollen_clean <- sunfish_pollen |>
  select(-c(all_of(spp_remove), DepthCM.Vania, Depth.predict,
             `_2.5`, `_10`, `_90`, `_975`)) |>
  rename("depth" = "Depth.Correct") |> 
  filter(depth >= 739 & depth <= 976) |> # Clip to age-span of isotopes
  mutate(age = sunfish_combined$Age)
 
sunfish_pollen_clean |> 
  select(depth, Age.bchron062722B, age) |> 
  head()

sunfish_pollen_clean |> 
  select(depth, Age.bchron062722B, age) |> 
  tail()

sunfish_pollen_clean <- sunfish_pollen_clean |> 
  select(-Age.bchron062722B)

# Distribute undifined pine counts between P.strobus and P.diplo based on their relative proportions
sunfish_pollen_assigned <- sunfish_pollen_clean %>%
  mutate(
    total_pollen = P.strobu + P.diplo,
    P.strobu = if_else(total_pollen == 0, P.strobu, round(P.strobu + (Pinus * (P.strobu / total_pollen)))),
    P.diplo = if_else(total_pollen == 0, P.diplo, round(P.diplo + (Pinus * (P.diplo / total_pollen))))
  ) %>%
  select(-c(total_pollen, Pinus))

sunfish_spp_long <- pivot_longer(sunfish_pollen_assigned, cols = -c(age, depth),
                                 names_to = "variablename")

# P.diplo now being aggregated with other
target_spp <- c("P.strobu", "Tsuga", "Fagus", "Quercus", "Betula")

# Pull out target species
sunfish_target_spp <- sunfish_spp_long |>
  filter(variablename %in% target_spp)

# Group all other spp
sunfish_other <- sunfish_spp_long |>
  filter(!variablename %in% target_spp) |>
  mutate(variablename = "other") |>
  group_by(variablename, age, depth) |>
  summarise(value = sum(value), .groups='keep')

sunfish_grouped_long <- bind_rows(sunfish_other, sunfish_target_spp) |> 
  mutate(variablename = fct(variablename, levels = c("other", target_spp)))

```

## Wrangling covariates {.unlisted .hidden}

```{r CovariateWrangling}
#| warning: false

sunfish_ll <- read_csv("./data/Sunfish_LL_Recon_Feb22.csv")
ns_temp <- read_csv("./data/Shuman24_NS_Temperatures.csv")
isotopes <- read_csv("./data/isotope_Kalmen_smoother_output.csv")

bin_width <- 100

isotopes_clean <- isotopes |>
  (\(x) split(x, x$var))() |>
  map(\(df) df |>
        select(-var) |>
        rename_with(~ paste(unique(df$var), ., sep = "_"), starts_with("X"))
  ) |>
  reduce(full_join, by = "bin") |> 
  select(bin, Beech_d13c_X.smoothed, Hemlock_d13c_X.smoothed) |> 
  rename(
    hem_d13 = Hemlock_d13c_X.smoothed,
    beech_d13 = Beech_d13c_X.smoothed)

ll_bins <-
  cut(
    sunfish_ll$Age,
    breaks = seq(
      from = min(sunfish_grouped_long$age),
      to = max(sunfish_grouped_long$age + bin_width),
      by = bin_width
    ), include.lowest = T, labels = F)

ll_mean <- cbind(bins = ll_bins, sunfish_ll) |> 
  drop_na(bins) |> 
  select(bins, LakeElev.cm.below.mod) |> 
  group_by(bins) |> 
  summarise(mean_ll = mean(LakeElev.cm.below.mod)) |> 
  arrange(desc(bins))

ns_temp_bins <-
  cut(
    ns_temp$Age,
    breaks = seq(
      from = min(sunfish_grouped_long$age),
      to = max(sunfish_grouped_long$age + bin_width),
      by = bin_width
    ), include.lowest = T, labels = F)

ns_temp_mean <- cbind(bins = ns_temp_bins, ns_temp) |> 
  drop_na(bins) |> 
  select(bins, Smean) |> 
  group_by(bins) |> 
  summarise(mean_ns_temp = mean(Smean)) |> 
  arrange(desc(bins))

sunfish_all_cov <- ll_mean |> 
  full_join(isotopes_clean, by = c("bins" = "bin")) |> 
  full_join(ns_temp_mean) |> 
  arrange(desc(bins))

sunfish_all_cov_interp <- sunfish_all_cov |> 
  mutate(across(c(beech_d13, hem_d13), forecast::na.interp))


```


# Visualisations {.tabset}

## B coefficients: driver-species/taxa relationships

It is an interesting result that when interactions between _Tsuga_ and _P.strobus_ are included that the effect of temperature on _P.strobus_ decreases. This does make sense, since some of the influence is being attributed to the negative effect of pine on hemloc in the $C$ coefficients.

The lake level _Tsuga_ effect is wetter conditions favouring _Tsuga_. The positive effect on _Pinus_ is not surprising looking at the data. I think the time-span of the data is having an impact here. I experimented with a model using the full almost 14,000 years-worth of pollen data, and lake level as the only covariate (lake level is the only covariate covering the whole span of the pollen data). The lake level effect becomes much more positive (around 0.7) on _Tsuga_ and dampens on _P.strobus_ (still positive, around 0.3). This was a bit of a rough exploration, but worth noting.

:::{.panel-tabset}
```{r, results='asis'}
#| warning: false
#| fig-height: 8

headings <- names(facet_fac)

for (i in seq_along(mod_plots_B)) {
  cat("# ",headings[i],"\n")
  print(mod_plots_B[[i]])
  cat('\n\n')
}
```

:::

## C coefficients: species-species (taxa-taxa) relationships

There is quite large error around the interactions, which is not surprising since estimating interactions is challenging. Nonetheless, there appears to be some interactions occuring.

:::{.panel-tabset}
```{r, results='asis'}
#| warning: false

headings <- names(facet_fac)

# Use a loop (or lapply, or map, you choose) to generate the headings and insert plots
for (i in seq_along(mod_plots_C)) {
  cat("# ",headings[i],"\n")
  print(mod_plots_C[[i]])
  cat('\n\n')
}
```

:::

## Pollen and covariates

Pollen and covariates for reference.

```{r PollenPlot}
#| warning: false
#| echo: false
#| fig-height: 14

pol_plot <- ggplot(sunfish_grouped_long, aes(x = age, y = value)) +
  geom_area(colour = "grey90") +
  geom_segment(data = sunfish_grouped_long,
           aes(x = age, xend = age,
           y = 0, yend = value), colour = "grey30", linewidth = 0.6) +
  scale_x_reverse(breaks = scales::breaks_pretty(n = 6)) +
  # coord_flip() +
  # ylim(0, 0.5) +
  labs(y = "Pollen counts", x = "Time (ybp)") +
  facet_wrap(~variablename,
             ncol = 1) +
  theme_minimal() +
  theme(
    text = element_text(size = 10),
  )

cov_plot <- sunfish_all_cov_interp |>
  select(bins, beech_d13, hem_d13, mean_ll, mean_ns_temp) |> 
  pivot_longer(-bins) |>
  ggplot(aes(x = bins, y = value)) +
  geom_point() +
  geom_line() +
  scale_x_reverse() +
  facet_wrap(~ name, scales = "free", ncol = 1) +
  theme_minimal() +
  theme(
    text = element_text(size = 10),
  )

pol_plot / cov_plot

```

